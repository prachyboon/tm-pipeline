AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ControllerName:
    Type: String
    Default: "tm-dailycheckin-controller"

Resources:

  ControllerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: generalPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: DynamoDBTablePolicies
                Effect: Allow
                Action:
                  - dynamodb:*
                Resource: "*"
              - Sid: S3AllResourcePolicies
                Effect: Allow
                Action:
                  - s3:HeadBucket
                  - s3:List*
                  - s3:Get*
                Resource: "*"
              - Sid: CloudWatchLogResourcePolicy
                Effect: Allow
                Action:
                  - logs:*
                Resource: "*"
              - Sid: GlueResourcesPolicy
                Effect: Allow
                Action:
                  - glue:*
                Resource: "*"
              - Sid: XrayResourcePolicy
                Effect: Allow
                Action:
                  - xray:*
                Resource: "*"
              - Sid: StepFunctionPolicy
                Effect: Allow
                Action:
                  - states:*
                Resource: "*"

  ControllerFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: tm-staging-zone
        S3Key: lambda/controller_package.zip
      Handler: controller.lambda_handler
      Role: !GetAtt ControllerRole.Arn
      FunctionName: !Ref 'ControllerName'
      Runtime: python3.11
      MemorySize: 128
      Timeout: 30

  ControllerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ControllerFunction
      Principal: s3.amazonaws.com
      SourceArn: 'arn:aws:s3:::tm-raw-zone'
      SourceAccount: !Ref AWS::AccountId

Outputs:
  ControllerFunctionArn:
    Value: !GetAtt ControllerFunction.Arn